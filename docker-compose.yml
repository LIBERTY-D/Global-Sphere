services:
  postgres_db_sc:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - global
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME}" ]
      interval: 5s
      retries: 5
      timeout: 5s
  pgadmin_sc:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_EXTERNAL_PORT}:${PGADMIN_INTERNAL_PORT}"
    depends_on:
      - postgres_db_sc
    networks:
      - global
  global_sphere_spring_boot_app_sc:
    build: .
    depends_on:
      postgres_db_sc:
        condition: service_healthy
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      - global
    env_file:
      - ${ENV_FILE}
    environment:
      SPRING_PROFILES_ACTIVE: staging

networks:
  global:
    driver: bridge